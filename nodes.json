{
    "nodes" :
    [   
		{ 	"node" : "MLModel",
			"color": "#d7c9aa",
			"info": {
				"title": "Selects machine learning Model"
			},
			"category": "Model Training",
			"params": [
				{
					"param_label": "description",
					"param_type": "string",
					"show": true
				},
                {
                    "param_label" : "model",
                    "param_type" : "option_of_options",
					"optionId" : "models",
                    "show" : true
                },
                {
                    "param_label" : "parameters",
                    "param_type" : "list",
                    "show" : true
                }
			],
			"inputs": [],
			"outputs": [
				{
					"port_label": "model",
					"port_type": "Model"
				}
			],
			"dependencies" : {
				"model_training.models" : {
					"origin": "parameter",
					"value": "model"
				}
			},
			"origin" : {
				"parameter" : "model"
			}
        },
		{	"node" : "Optimizer",
			"info" : {
				"title" : "Selects optimizer"
			},
			"category" : "Model Training",
			"params" : [
				{
					"param_label" : "description",
					"param_type" : "string",
					"show" : true
				},
				{
					"param_label" : "parameters",
					"param_type" : "list",
					"show" : true
				},
				{
					"param_label" : "optimizer",
					"param_type" : "option",
					"optionId" : "optimizer_types",
					"show" : true
				}
			],
			"inputs" : [],
			"outputs" : [
				{
					"port_label" : "optimizer",
					"port_type" : "Optimizer"
				}
			],
			"dependencies" : {
				"model_training.optimizers": {
					"origin": "parameter",
					"value": "optimizer"
				}
			},
			"origin" : {
				"parameter" : "optimizer"
			}
		},
        {   "node" : "Train Model",
            "color" : "rgba(255, 99, 132, 0.75)",
            "info" : {
                "title" : "Trains given Model"
            },
            "category" : "Model Training",
            "params" : [
                {
                    "param_label" : "description",
                    "param_type" : "string",
                    "show" : true
                },
				{
					"param_label" : "epochs",
					"param_type" : "number",
					"show" : false
				},
				{
					"param_label" : "bach_size",
					"param_type" : "number",
					"show" : false
				}
            ],
            "inputs" : [
                {
                    "port_label" : "features",
                    "port_type" : "DataFrame"
                },
                {
                    "port_label" : "truth",
                    "port_type" : "DataFrame"
                },
				{
					"port_label" : "model",
                    "port_type" : "Model"
				},
				{
					"port_label" : "optimizer",
					"port_type" : "Optimizer"
				}
            ],
            "outputs" : [
                {
                    "port_label" : "model",
                    "port_type" : "Model"
                }
            ],
            "dependencies" : {
				"model_training" : {
					"origin": "custom",
					"value": "TrainModel"
				}
            },
			"origin" : {
				"custom" : "TrainModel"
			}
        },
        {   "node" : "Load Dataset",
            "color" : "rgba(155, 99, 232, 0.75)",
            "info" : {
                "title" : "Loads given Dataset"
            },
            "category" : "Data Acquisition",
            "external_dependencies":
            [
                "./data/<param:path>"
            ],
            "params" : [
                {
                    "param_label" : "path",
                    "param_type" : "string",
                    "show": true
                },
                {
                    "param_label" : "loader",
                    "param_type" : "option",
                    "optionId": "data_source",
                    "show" : false
                }
            ],
            "inputs" : [],
            "outputs" : [
                {
                    "port_label" : "resulting_table",
                    "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_acquisition": {
					"origin": "custom",
					"value": "LoadDataset"
				}
            },
			"origin" : {
				"custom" : "LoadDataset"
			}
        },
        {   "node" : "Input",
            "info" : {
                "title" : "Loads data from previous step"
            },
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "key", "param_type" : "string", "show" : true},
                {"param_label" : "Socket type", "param_type" : "option", "optionId": "socket_type", "show" : false}
            ],
            "inputs" : [],
            "outputs" : [
                {
                    "port_label" : "key",
                    "port_type" : "Any"

                }
            ],
            "dependencies" : {
                "orchestration": {
					"origin": "custom",
					"value": "In"
				}
            },
			"origin" : {
				"custom" : "In"
			}
        },
        {   "node" : "Output",
            "info" : {
                "title" : "Saves data to be used in next steps"
            }, 
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "key", "param_type" : "string", "show" : true},
                {"param_label" : "Socket type", "param_type" : "option", "optionId": "socket_type", "show" : false}
            ],
            "inputs" : [
                {
                    "port_label" : "key",
                    "port_type" : "Any"
                }
            ],
            "outputs" : [],
            "dependencies" : {
                "orchestration": {
                    "origin" : "custom",
                    "value" : "Out"
                }
            },
            "origin" : {
                "custom" : "Out"
            }
        },
        {   "node" : "Parameter",
            "info" : {
                "title" : "Loads parameter from current step"      
            },
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "type", "param_type" : "option", "optionId": "parameter_type", "show" : true}
            ],
            "inputs" : [],
            "outputs" : [],
            "dependencies" : {
				"orchestration": {
					"origin": "custom",
					"value": "StepManager"
				}
            },
			"origin" : {
				"custom" : "StepManager"
			}
        },
        {   "node" : "Select Columns",
            "info" : {
                "title" : "Selects given Columns"
            },
            "category" : "Data Transformation",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                {
                "port_label" : "origin_table",
                "port_type" : "DataFrame"
                }
            ],
            "outputs" : [
                {
                "port_label" : "resulting_table",
                "port_type" : "DataFrame"
				}
            ],
            "dependencies" : {
				"data_transformation" : {
					"origin": "custom",
					"value": "SelectColumns"
				}
			},
			"origin" : {
				"custom" : "SelectColumns"
			}
        },
        {   "node" : "Split train test",
            "info" : {
                "title" : "Splits data into train and test"
            },
            "category" : "Data Transformation",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "train_percentage", "param_type" : "number", "show" : true}
            ],
            "inputs" : [
                {
                "port_label" : "features",
                "port_type" : "DataFrame"
                },
                {
                "port_label" : "truth",
                "port_type" : "DataFrame"
                }
            ],
            "outputs" : [
                {
                "port_label" : "features_train",
                "port_type" : "DataFrame"
                },
                {
                "port_label" : "features_test",
                "port_type" : "DataFrame"
                },
                {
                "port_label" : "truth_train",
                "port_type" : "DataFrame"
                },
                {
                "port_label" : "truth_test",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
                "data_transformation": {
					"origin": "custom",
					"value": "SplitTrainTest"
				}
            },
			"origin" : {
				"custom" : "SplitTrainTest"
			}
        },
        {   "node" : "Join",
            "category" : "Data Transformation",
            "info" : {
                "title" : "Joins two tables"  
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "type", "param_type" : "option", "optionId" : "join_type", "show" : true},
                {"param_label" : "index", "param_type" : "string", "show" : false},
                {"param_label" : "dataset_tag", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                {
                "port_label" : "left_table",
                "port_type" : "DataFrame"
                },
                {
                "port_label" : "right_table",
                "port_type" : "DataFrame"
                }
            ],
            "outputs" : [
                {
                "port_label" : "resulting_table",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_transformation": {
					"origin": "custom",
					"value": "Join"
				}
			},
			"origin" : {
				"custom" : "Join"
			}
        },
        {   "node" : "Drop Columns",
            "info" : {
                "title" : "Drops given columns"
            },
            "category" : "Data Transformation",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                {
                "port_label" : "origin_table",
                "port_type" : "DataFrame"
                }
            ],
            "outputs" : [
                {
                "port_label" : "resulting_table",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_transformation": {
					"origin": "custom",
					"value": "DropColumns"
				}
			},
			"origin" : {
				"custom" : "DropColumns"
			}
        },
        {   "node" : "Evaluate",
            "info" : {
                "title" : "Evaluates model given features and truth"
            },
            "category" : "Model Evaluation",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                { "port_label" : "model", "port_type" : "Model" },
                { "port_label" : "features", "port_type" : "DataFrame"},
                { "port_label" : "truth", "port_type" : "DataFrame"}
            ],
            "outputs" : [
                { 
                    "port_label" : "result",
                    "port_type" : "Result"
                }
            ],
            "dependencies" : {
				"model_evaluation": {
					"origin": "custom",
					"value": "Evaluate"
				}
			},
			"origin" : {
				"custom" : "Evaluate"
			}
        },
        {   "node" : "Reuse Encoder",
            "info" : {
                "title" : "Reuses pre-trained encoder"
            },
            "category" : "Data Preprocessing",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "encoder", "port_type" : "Object" }
            ],
            "outputs" : [
                { 
                    "port_label" : "out",
                    "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_preprocessing" :
				{
					"origin": "custom",
					"value": "ReuseEncoder"
				}
			},
			"origin" : {
				"custom" : "ReuseEncoder"
			}
        },
        {   "node" : "ReScale Columns",
            "info" : {
                "title" : "Reuses pretrained scaler"
            },
            "category" : "Data Preprocessing",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                { "port_label" : "input_dataset", "port_type" : "DataFrame" },
                { "port_label" : "scaler", "port_type" : "Object" }
            ],
            "outputs" : [
                { 
                    "port_label" : "output_dataset",
                    "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_preprocessing" :
				{
					"origin": "custom",
					"value": "ReScaleColumns"
				}
			},
			"origin" : {
				"custom" : "ReScaleColumns"
			}
        },
		{	"node" : "Encoder",
			"info" : {
				"title" : "Selects encoder"
			},
			"category": "Data Preprocessing",
			"params": [
				{"param_label": "description", "param_type": "string", "show": true},
				{"param_label": "type", "param_type": "option", "optionId": "encoder_type", "show": true},
				{"param_label": "parmeters", "param_type": "list", "show": false}
			],
			"inputs": [
			],
			"outputs": [
				{
					"port_label": "encoder",
					"port_type": "Encoder"
				}
			],
			"dependencies": {
				"encoders": {
					"origin": "parameter",
					"value": "type"
				}
			},
			"origin" : {
				"parameter" : "type"
			}
		},
        {   "node" : "TrainEncoder",
            "info" : {
                "title" : "Trains encoder given dataset and columns, also transforms the data"
            },
            "category": "Data Preprocessing",
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "columns", "param_type": "string", "show": false}
            ],
            "inputs": [
				{ "port_label": "encoder", "port_type": "Encoder" },
                { "port_label": "data", "port_type": "DataFrame" }
            ],
            "outputs": [
                {
                    "port_label": "out",
                    "port_type": "DataFrame"
                },
                {
                    "port_label": "encoder",
                    "port_type": "Encoder"
                }
            ],
            "dependencies": {
                "data_preprocessing": {
                    "origin": "custom",
                    "value": "TrainEncoder"
                }
            },
			"origin" : {
				"custom" : "TrainEncoder"
			}
		},
		{	"node" : "Scaler",
			"info" : {
				"title" : "Selects scaler"
			},
			"category": "Data Preprocessing",
			"params": [
				{"param_label": "description", "param_type": "string", "show": true},
				{"param_label": "type", "param_type": "option", "optionId": "scaler_type", "show": true},
				{"param_label": "parmeters", "param_type": "list", "show": false}
			],
			"inputs": [
			],
			"outputs": [
				{
					"port_label": "scaler",
					"port_type": "Scaler"
				}
			],
			"dependencies": {
				"scalers": {
					"origin": "parameter",
					"value": "type"
				}
			},
			"origin" : {
				"parameter" : "type"
			}
		},
        {   "node" : "TrainScaler",
            "info" : {
                "title" : "Fits scaler and transforms data"
            },
            "category": "Data Preprocessing",
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "columns", "param_type": "string", "show": false}
            ],
            "inputs": [
                { "port_label": "data", "port_type": "DataFrame" },
				{ "port_label": "scaler", "port_type": "Scaler" }
            ],
            "outputs": [
                {
                    "port_label": "data",
                    "port_type": "DataFrame"
                },
                {
                    "port_label": "scaler",
                    "port_type": "Scaler"
                }
            ],
            "dependencies": {
                "data_preprocessing": {
                    "origin": "custom",
                    "value": "TrainScaler"
                }
            },
			"origin" : {
				"custom" : "TrainScaler"
			}
        },
        {   "node" : "Predict",
            "info" : {
                "title" : "Predicts data and stores result in a file"
            },
            "category": "Model Evaluation",
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "path", "param_type": "string", "show": true}
            ],
            "inputs": [
                { "port_label": "model", "port_type": "Model" },
                { "port_label": "features", "port_type": "DataFrame"}
            ],
            "outputs": [],
            "dependencies": {
                "model_evaluation": {
                    "origin": "custom",
                    "value": "Predict"
                }
            },
            "origin": 
            {
                "custom": "Predict"
            }
        },
        {   "node" : "Replace Nan",
            "category": "Data Preprocessing",
            "info": {
                "title": "Replace NaN values"
            },
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "value", "param_type": "string", "show": true}
            ],
            "inputs": [
                { 	"port_label": "origin", "port_type": "DataFrame" }
            ],
            "outputs": [
                {	"port_label": "result", "port_type": "DataFrame" }
            ],
            "dependencies": {
				"data_preprocessing" : {
					"origin": "custom",
					"value": "ReplaceNan"
				}
			},
			"origin" : {
				"custom" : "ReplaceNan"
			}
        },
        {   "node" : "Make Categorical Numeric",
            "category": "Data Preprocessing",
            "info": {
                "title": "Makes Numeric some columns"
            },
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "columns", "param_type": "string", "show": false}
            ],
            "inputs": [
                { 	"port_label": "origin_table", "port_type": "DataFrame" }
            ],
            "outputs": [
                {	"port_label": "resulting_table", "port_type": "DataFrame" }
            ],
            "dependencies": {
				"data_preprocessing" : {
					"origin": "custom",
					"value": "MakeCategoricalNumeric"
				}
			},
			"origin" : {
				"custom" : "MakeCategoricalNumeric"
			}
        }
    ]
}